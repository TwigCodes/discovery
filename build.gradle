buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
        springbootAdminVersion = '2.0.2'
    }
    ext['lombok.version'] = '1.18.2'
    repositories {
        mavenCentral()
        maven { url('http://repo.spring.io/plugins-release') }
        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
group = 'com.twigcodes'
sourceCompatibility = 1.8
targetCompatibility = 1.8
apply from: './gradle/docker.gradle'
repositories {
    mavenCentral()
}
ext {
    springCloudVersion = 'Finchley.SR1'
}
dependencies {
    implementation("de.codecentric:spring-boot-admin-starter-server:${springbootAdminVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.cloud:spring-cloud-config-server")
    implementation("org.springframework.cloud:spring-cloud-config-monitor")
    implementation('org.springframework.cloud:spring-cloud-starter-bus-amqp')
    implementation("org.springframework.cloud:spring-cloud-starter-stream-rabbit")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")
    runtime('org.springframework.boot:spring-boot-devtools')
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    annotationProcessor('org.projectlombok:lombok')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
configurations.compileOnly.extendsFrom(configurations.annotationProcessor)
